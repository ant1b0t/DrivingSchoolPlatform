name: Deploy to VPS

on:
  push:
    branches:
      - prod
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      SERVER_IP: ${{ secrets.SERVER_IP }}
      SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
      PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
      PROJECT_PATH: ${{ secrets.PROJECT_PATH }}

      # Define environment variables for PostgreSQL
      DrivingSchool_PROD_POSTGRES_USER: ${{ secrets.DrivingSchool_PROD_POSTGRES_USER }}
      DrivingSchool_PROD_POSTGRES_PASSWORD: ${{ secrets.DrivingSchool_PROD_POSTGRES_PASSWORD }}
      DrivingSchool_PROD_POSTGRES_DB: ${{ secrets.DrivingSchool_PROD_POSTGRES_DB }}
      DrivingSchool_PROD_DOMAIN: ${{ secrets.DrivingSchool_PROD_DOMAIN }}
      DrivingSchool_SSL_EMAIL: ${{ secrets.DrivingSchool_SSL_EMAIL }}
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Copy repository contents to remote server via scp
      uses: appleboy/scp-action@master
      with:
        host: ${{ env.SERVER_IP }}
        username: ${{ env.SERVER_USERNAME }}
        port: 22
        key: ${{ env.PRIVATE_KEY }}
        source: "."
        target: ${{ env.PROJECT_PATH }}

    - name: Push to server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.SERVER_IP }}
        username: ${{ env.SERVER_USERNAME }}
        key: ${{ env.PRIVATE_KEY }}
        port: 22
        script: |
          cd ${{ env.PROJECT_PATH }} 
          ls

          # Set PostgreSQL environment variables
          export DrivingSchool_PROD_POSTGRES_USER=${{ env.DrivingSchool_PROD_POSTGRES_USER }}
          export DrivingSchool_PROD_POSTGRES_PASSWORD=${{ env.DrivingSchool_PROD_POSTGRES_PASSWORD }}
          export DrivingSchool_PROD_POSTGRES_DB=${{ env.DrivingSchool_PROD_POSTGRES_DB }}

          # Run Docker Compose with the environment variables
          docker-compose down 
          docker-compose up --build -d
